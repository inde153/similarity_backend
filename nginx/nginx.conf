worker_processes auto;

events {
    worker_connections 1024;
}
http {
    include mime.types;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    server {
        listen 80;
        server_name localhost;

        # /v1로 시작하는 요청
        location /v1 {
            proxy_pass http://was:8080;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /socket.io {
            # WebSocket 연결을 위한 설정
            proxy_pass http://was:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;

            # # CORS 정책 설정
            # add_header 'Access-Control-Allow-Origin' '*';    
            # add_header 'Access-Control-Allow-Credentials' 'true';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            # add_header 'Access-Control-Max-Age' 1728000;
            # add_header 'Content-Type' 'text/plain charset=UTF-8';
            # add_header 'Content-Length' 0;
            # add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Authorization,Accept,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Range';
            # add_header 'Access-Control-Allow-Credentials' 'true'; # credentials 옵션 추가
            # if ($request_method = 'OPTIONS') {
            #     add_header 'Access-Control-Max-Age' 86400;
            #     add_header 'Content-Type' 'text/plain charset=UTF-8';
            #     add_header 'Content-Length' 0;
            #     return 204;
            # }
        }

        # /chat 소켓 통신, CORS 및 preflight OPTIONS 요청 처리
        location /chat {
            # HTTP/1.1 버전에서 지원하는 프로토콜 전환 메커니즘을 사용한다
            proxy_pass http://was:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
}
